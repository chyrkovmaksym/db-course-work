(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{653:function(e,n,_){"use strict";_.r(n);var r=_(34),v=Object(r.a)({},(function(){var e=this,n=e.$createElement,_=e._self._c||n;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"реалізація-інформаціиного-та-програмного-забезпечення"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#реалізація-інформаціиного-та-програмного-забезпечення"}},[e._v("#")]),e._v(" Реалізація інформаційного та програмного забезпечення")]),e._v(" "),_("p",[e._v("В рамках проекту розробляється:")]),e._v(" "),_("ul",[_("li",[e._v("SQL-скрипт для створення на початкового наповнення бази даних")]),e._v(" "),_("li",[e._v("RESTfull сервіс для управління даними")])]),e._v(" "),_("h1",{attrs:{id:"реалізація-інформаціиного-та-програмного-забезпечення-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#реалізація-інформаціиного-та-програмного-забезпечення-2"}},[e._v("#")]),e._v(" Реалізація інформаційного та програмного забезпечення")]),e._v(" "),_("p",[e._v("В рамках проекту розробляється:")]),e._v(" "),_("ul",[_("li",[e._v("SQL-скрипт для створення на початкового наповнення бази даних")]),e._v(" "),_("li",[e._v("RESTfull сервіс для управління даними")])]),e._v(" "),_("p",[e._v("-- MySQL Script generated by MySQL Workbench\n-- Sun Dec 25 07:19:21 2022\n-- Model: New Model    Version: 1.0\n-- MySQL Workbench Forward Engineering")]),e._v(" "),_("p",[e._v("SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;\nSET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;\nSET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';")]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("-- Schema mydb")]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("DROP SCHEMA IF EXISTS "),_("code",[e._v("mydb")]),e._v(" ;")]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("-- Schema mydb")]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("CREATE SCHEMA IF NOT EXISTS "),_("code",[e._v("mydb")]),e._v(" DEFAULT CHARACTER SET utf8 ;\nUSE "),_("code",[e._v("mydb")]),e._v(" ;")]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("-- Table "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("answer")])]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("DROP TABLE IF EXISTS "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("answer")]),e._v(" ;")]),e._v(" "),_("p",[e._v("CREATE TABLE IF NOT EXISTS "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("answer")]),e._v(" (\n"),_("code",[e._v("user_id")]),e._v(" INT NOT NULL,\n"),_("code",[e._v("text")]),e._v(" TEXT NOT NULL,\n"),_("code",[e._v("data")]),e._v(" DATE NOT NULL,\n"),_("code",[e._v("id")]),e._v(" INT NOT NULL AUTO_INCREMENT,\n"),_("code",[e._v("answer_id")]),e._v(" INT NOT NULL,\nPRIMARY KEY ("),_("code",[e._v("id")]),e._v("),\nINDEX "),_("code",[e._v("fk_selectedOption_id_idx")]),e._v(" ("),_("code",[e._v("answer_id")]),e._v(" ASC) VISIBLE,\nINDEX "),_("code",[e._v("fk_user_id_idx")]),e._v(" ("),_("code",[e._v("user_id")]),e._v(" ASC) VISIBLE,\nCONSTRAINT "),_("code",[e._v("fk_selectedOption_id")]),e._v("\nFOREIGN KEY ("),_("code",[e._v("answer_id")]),e._v(")\nREFERENCES "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("selectedOption")]),e._v(" ("),_("code",[e._v("id")]),e._v(")\nON DELETE NO ACTION\nON UPDATE NO ACTION,\nCONSTRAINT "),_("code",[e._v("fk_user_id")]),e._v("\nFOREIGN KEY ("),_("code",[e._v("user_id")]),e._v(")\nREFERENCES "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("user")]),e._v(" ("),_("code",[e._v("id")]),e._v(")\nON DELETE NO ACTION\nON UPDATE NO ACTION);")]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("-- Table "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("category")])]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("DROP TABLE IF EXISTS "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("category")]),e._v(" ;")]),e._v(" "),_("p",[e._v("CREATE TABLE IF NOT EXISTS "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("category")]),e._v(" (\n"),_("code",[e._v("category_id")]),e._v(" INT NOT NULL,\n"),_("code",[e._v("name")]),e._v(" VARCHAR(255) NOT NULL,\nPRIMARY KEY ("),_("code",[e._v("category_id")]),e._v("));")]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("-- Table "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("option")])]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("DROP TABLE IF EXISTS "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("option")]),e._v(" ;")]),e._v(" "),_("p",[e._v("CREATE TABLE IF NOT EXISTS "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("option")]),e._v(" (\n"),_("code",[e._v("type")]),e._v(" TEXT(255) NOT NULL,\n"),_("code",[e._v("text")]),e._v(" TEXT(255) NOT NULL,\n"),_("code",[e._v("id")]),e._v(" INT NOT NULL AUTO_INCREMENT,\n"),_("code",[e._v("question_id")]),e._v(" INT NOT NULL,\nPRIMARY KEY ("),_("code",[e._v("id")]),e._v("),\nINDEX "),_("code",[e._v("fk_question_id_idx")]),e._v(" ("),_("code",[e._v("question_id")]),e._v(" ASC) VISIBLE,\nCONSTRAINT "),_("code",[e._v("fk_question_id")]),e._v("\nFOREIGN KEY ("),_("code",[e._v("question_id")]),e._v(")\nREFERENCES "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("question")]),e._v(" ("),_("code",[e._v("id")]),e._v(")\nON DELETE NO ACTION\nON UPDATE NO ACTION);")]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("-- Table "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("question")])]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("DROP TABLE IF EXISTS "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("question")]),e._v(" ;")]),e._v(" "),_("p",[e._v("CREATE TABLE IF NOT EXISTS "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("question")]),e._v(" (\n"),_("code",[e._v("type")]),e._v(" TEXT(255) NOT NULL,\n"),_("code",[e._v("text")]),e._v(" TEXT(255) NOT NULL,\n"),_("code",[e._v("id")]),e._v(" INT NOT NULL AUTO_INCREMENT,\n"),_("code",[e._v("topic")]),e._v(" TEXT(255) NOT NULL,\n"),_("code",[e._v("quiz_id")]),e._v(" INT NOT NULL,\nPRIMARY KEY ("),_("code",[e._v("id")]),e._v("),\nINDEX "),_("code",[e._v("fk_quiz_id_idx")]),e._v(" ("),_("code",[e._v("quiz_id")]),e._v(" ASC) VISIBLE,\nCONSTRAINT "),_("code",[e._v("fk_quiz_id")]),e._v("\nFOREIGN KEY ("),_("code",[e._v("quiz_id")]),e._v(")\nREFERENCES "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("quiz")]),e._v(" ("),_("code",[e._v("id")]),e._v(")\nON DELETE NO ACTION\nON UPDATE NO ACTION);")]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("-- Table "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("quiz")])]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("DROP TABLE IF EXISTS "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("quiz")]),e._v(" ;")]),e._v(" "),_("p",[e._v("CREATE TABLE IF NOT EXISTS "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("quiz")]),e._v(" (\n"),_("code",[e._v("type")]),e._v(" TEXT(255) NOT NULL,\n"),_("code",[e._v("text")]),e._v(" TEXT(255) NOT NULL,\n"),_("code",[e._v("id")]),e._v(" INT NOT NULL AUTO_INCREMENT,\n"),_("code",[e._v("topic")]),e._v(" TEXT(255) NOT NULL,\n"),_("code",[e._v("date")]),e._v(" DATETIME NOT NULL,\n"),_("code",[e._v("creator_id")]),e._v(" INT NOT NULL,\nPRIMARY KEY ("),_("code",[e._v("id")]),e._v("),\nINDEX "),_("code",[e._v("fk_creator_id_idx")]),e._v(" ("),_("code",[e._v("creator_id")]),e._v(" ASC) VISIBLE,\nCONSTRAINT "),_("code",[e._v("fk_creator_id")]),e._v("\nFOREIGN KEY ("),_("code",[e._v("creator_id")]),e._v(")\nREFERENCES "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("user")]),e._v(" ("),_("code",[e._v("id")]),e._v(")\nON DELETE NO ACTION\nON UPDATE NO ACTION);")]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("-- Table "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("selectedOption")])]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("DROP TABLE IF EXISTS "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("selectedOption")]),e._v(" ;")]),e._v(" "),_("p",[e._v("CREATE TABLE IF NOT EXISTS "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("selectedOption")]),e._v(" (\n"),_("code",[e._v("id")]),e._v(" INT NOT NULL AUTO_INCREMENT,\n"),_("code",[e._v("option_id")]),e._v(" INT NOT NULL,\nPRIMARY KEY ("),_("code",[e._v("id")]),e._v("),\nINDEX "),_("code",[e._v("fk_option_id_idx")]),e._v(" ("),_("code",[e._v("option_id")]),e._v(" ASC) VISIBLE,\nCONSTRAINT "),_("code",[e._v("fk_option_id")]),e._v("\nFOREIGN KEY ("),_("code",[e._v("option_id")]),e._v(")\nREFERENCES "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("option")]),e._v(" ("),_("code",[e._v("id")]),e._v(")\nON DELETE NO ACTION\nON UPDATE NO ACTION);")]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("-- Table "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("user")])]),e._v(" "),_("hr"),e._v(" "),_("p",[e._v("DROP TABLE IF EXISTS "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("user")]),e._v(" ;")]),e._v(" "),_("p",[e._v("CREATE TABLE IF NOT EXISTS "),_("code",[e._v("mydb")]),e._v("."),_("code",[e._v("user")]),e._v(" (\n"),_("code",[e._v("username")]),e._v(" VARCHAR(16) NOT NULL,\n"),_("code",[e._v("mail")]),e._v(" VARCHAR(255) NOT NULL,\n"),_("code",[e._v("id")]),e._v(" INT NOT NULL AUTO_INCREMENT,\nPRIMARY KEY ("),_("code",[e._v("id")]),e._v("));")]),e._v(" "),_("p",[e._v("SET SQL_MODE=@OLD_SQL_MODE;\nSET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;\nSET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;")]),e._v(" "),_("h1",{attrs:{id:"реалізація-доступу-до-бази-даних"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#реалізація-доступу-до-бази-даних"}},[e._v("#")]),e._v(" Реалізація доступу до бази даних")]),e._v(" "),_("h1",{attrs:{id:"підключення-до-бази-даних"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#підключення-до-бази-даних"}},[e._v("#")]),e._v(" Підключення до бази даних")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("const mysql = require('mysql');\n\nconst connection = mysql.createConnection({\n  host: 'localhost',\n  user: 'user',\n  password: '13124',\n  database: 'mydb',\n});\n\nmodule.exports = connection;\n")])])]),_("h1",{attrs:{id:"api-для-обробки-запитів"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#api-для-обробки-запитів"}},[e._v("#")]),e._v(" API для обробки запитів")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("const { Router } = require('express')\nconst router = Router()\n\nconst connection = require('../db')\n\nconst { ERRORS, SUCCESS } = require('../constants')\n\nrouter.get('/answers', (req, res) => {\n  connection.query('select * from answer', (err, answers) => {\n    if (err) {\n      console.log(err)\n      res.status(500).json({\n        message: ERRORS.SERVER_ERROR,\n      })\n      return\n    }\n\n    res.status(200).json({\n      data: answers,\n    })\n  })\n})\n\nrouter.get('/answer/:id', (req, res) => {\n  const { id } = req.params\n  connection.query(`select * from answer where id = ${id}`, (err, [answer]) => {\n    if (err) {\n      console.log(err)\n      res.status(500).json({\n        message: ERRORS.SERVER_ERROR,\n      })\n      return\n    }\n\n    if (!answer) {\n      res.status(404).json({\n        message: ERRORS.NOT_FOUND,\n      })\n      return\n    }\n\n    res.status(200).json({\n      data: answer,\n    })\n  })\n})\n\nrouter.post('/answer', (req, res) => {\n  const { user_id, text, data, answer_id } = req.body\n\n  if (!(user_id && text && data && answer_id)) {\n    res.status(400).json({\n      message: ERRORS.ALL_FIELDS_REQUIRED,\n    })\n    return\n  }\n\n  connection.query(\n    `insert into answer (\n        user_id,\n        text,\n        data,\n        answer_id\n      ) values (\n        ${user_id},\n        \"${text}\",\n        \"${data}\",\n        ${answer_id}\n      )`,\n    (err) => {\n      if (err) {\n        console.log(err)\n        res.status(500).json({\n          message: ERRORS.SERVER_ERROR,\n        })\n        return\n      }\n\n      res.status(201).json({\n        message: SUCCESS.PROJECT_CREATED,\n      })\n    },\n  )\n})\n\nrouter.put('/answer/:id', (req, res) => {\n  const { id } = req.params\n\n  connection.query(`select * from answer where id = ${id}`, (err, [answer]) => {\n    if (err) {\n      console.log(err)\n      res.status(500).json({\n        message: ERRORS.SERVER_ERROR,\n      })\n      return\n    }\n\n    if (!answer) {\n      res.status(404).json({\n        message: ERRORS.NOT_FOUND,\n      })\n      return\n    }\n\n    const { user_id, text, data, answer_id } = {\n      ...answer,\n      ...req.body,\n    }\n\n    connection.query(\n      `update answer set \n        user_id = ${user_id}, \n        text = \"${text}\",\n        data = \"${data}\",\n        answer_id = ${answer_id}\n        where id = ${id}`,\n      (err) => {\n        if (err) {\n          console.log(err);\n          res.status(500).json({\n            message: ERRORS.SERVER_ERROR,\n          })\n          return\n        }\n\n        res.status(200).json({\n          message: SUCCESS.PROJECT_UPDATED,\n        })\n      },\n    )\n  })\n})\n\nrouter.delete('/answer/:id', (req, res) => {\n  const { id } = req.params\n  connection.query(`delete from answer where id = ${id}`, (err) => {\n    if (err) {\n      console.log(err);\n      res.status(500).json({\n        message: ERRORS.SERVER_ERROR,\n      })\n      return\n    }\n\n    res.status(200).json({\n      message: SUCCESS.PROJECT_DELETED,\n    })\n  })\n})\n\nmodule.exports = router\n\n")])])]),_("h1",{attrs:{id:"утиліти"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#утиліти"}},[e._v("#")]),e._v(" Утиліти")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("const decodeId = (bufferArray) => {\n  return Buffer.from(bufferArray).toString('hex')\n}\n\nmodule.exports = { decodeId }\n")])])]),_("h1",{attrs:{id:"фалз-з-константами-для-відповідеи-з-серверу"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#фалз-з-константами-для-відповідеи-з-серверу"}},[e._v("#")]),e._v(" Фалз з константами для відповідей з серверу")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("const ERRORS = {\n  SERVER_ERROR: 'Error on server. Try later',\n  ALL_FIELDS_REQUIRED: 'All fields are required',\n  NOT_FOUND: 'Answer was not found. Check the id',\n};\n\nmodule.exports = ERRORS;\n")])])]),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("const SUCCESS = {\n  PROJECT_CREATED: 'New answer was created',\n  PROJECT_UPDATED: 'Answer has been updated',\n  PROJECT_DELETED: 'Answer was deleted',\n}\n\nmodule.exports = SUCCESS\n")])])]),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("const ERRORS = require('./errors')\nconst SUCCESS = require('./success')\n\nmodule.exports = {\n  ERRORS,\n  SUCCESS,\n}\n")])])]),_("h1",{attrs:{id:"головнии-фаил-серверу"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#головнии-фаил-серверу"}},[e._v("#")]),e._v(" Головний файл серверу")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("const express = require(\"express\");\nconst cors = require(\"cors\");\nconst bodyParser = require(\"body-parser\");\n\nconst app = express();\nconst port = 3000;\nconst host = '0.0.0.0';\n\nconst connection = require('./db');\n\nconnection.connect();\n\napp.use(cors());\napp.use(bodyParser.json());\napp.use('/api', require('./controls'));\n\napp.listen(port, host, () => {\n  console.log(`Started server: ${host}/${port}`);\n});\n")])])])])}),[],!1,null,null,null);n.default=v.exports}}]);